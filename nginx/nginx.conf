# Generated by nginxconfig.io
# https://nginxconfig.io/?0.domain=moneteer.com&0.redirect=false&0.https=false&0.php=false&0.proxy&0.proxy_pass=http:%2F%2F127.0.0.1:5000&0.root=false&file_structure=unified

user www-data;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
	multi_accept on;
	worker_connections 65535;
}

http {
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	server_tokens off;
	log_not_found off;
	types_hash_max_size 2048;
	client_max_body_size 16M;

	# MIME
	include mime.types;
	default_type application/octet-stream;

	# logging
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log warn;

	# load configs
	#include /etc/nginx/conf.d/*.conf;
    #include /etc/nginx/sites-enabled/*;

    server {
        listen 80 default_server;
        # listen [::]:80 default_server deferred;
        return 444;
    }

	# moneteer.com
	server {
		listen 80;
		listen [::]:80;
	
		server_name moneteer.com www.moneteer.com;
	
		# security headers
		add_header X-Frame-Options "SAMEORIGIN" always;
		add_header X-XSS-Protection "1; mode=block" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header Referrer-Policy "no-referrer-when-downgrade" always;
		add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
		
		# . files
		location ~ /\.(?!well-known) {
			deny all;
		}

        # AWS Load balancer doesn't pass through host header so we need to force the host for the healthcheck endpoint
        location /healthcheck {
            proxy_pass http://127.0.0.1:5000/healthcheck;
			proxy_http_version	1.1;
			proxy_cache_bypass	$http_upgrade;
			
			proxy_set_header Upgrade			$http_upgrade;
			proxy_set_header Connection 		"upgrade";
			proxy_set_header Host				"www.moneteer.com";
			proxy_set_header X-Real-IP			$remote_addr;
			proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto	$scheme;
			proxy_set_header X-Forwarded-Host	"www.moneteer.com";
			proxy_set_header X-Forwarded-Port	$server_port;
        }
	
		# reverse proxy
		location / {
			proxy_pass http://127.0.0.1:5000;
			proxy_http_version	1.1;
			proxy_cache_bypass	$http_upgrade;
			
			proxy_set_header Upgrade			$http_upgrade;
			proxy_set_header Connection 		"upgrade";
			proxy_set_header Host				$host;
			proxy_set_header X-Real-IP			$remote_addr;
			proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto	$scheme;
			proxy_set_header X-Forwarded-Host	$host;
			proxy_set_header X-Forwarded-Port	$server_port;
		}
	
		# favicon.ico
		location = /favicon.ico {
			log_not_found off;
			access_log off;
		}
		
		# robots.txt
		location = /robots.txt {
			log_not_found off;
			access_log off;
		}
		
		# gzip
		gzip on;
		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
	}
}